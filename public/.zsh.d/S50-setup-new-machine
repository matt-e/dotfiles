# -*- sh -*-

function brew_cask {
    local package=$1
    shift 1
    if brew ls --cask --versions $package > /dev/null; then
      echo "$package already installed"
    else 
      echo "Installing $package"
      brew install --cask $package "$@"
    fi
}

function brew_pkg {
    local package=$1
    shift 1
    if brew ls --versions $package > /dev/null; then
      echo "$package already installed"
    else 
      echo "Installing $package"
      brew install $package "$@"
    fi
}

function setup_new_machine {
    local working=$HOME/tmp/setup
    mkdir -p $working
    pushd $working


    if [ -z $DEVROOT ]; then
      echo 'Please ensure that $DEVROOT is set'
      return 1
    fi

    if [ -z $GOPATH ]; then      
      echo 'Please ensure that $GOPATH is set'
      return 1
    fi

    if which brew > /dev/null; then
      echo "Homebrew already installed"
    else
      echo "Installing Homebrew"
      /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    fi

    echo "setting up brew taps"
    brew tap d12frosted/emacs-plus
    brew tap homebrew/cask-fonts

    brew_pkg git 
    brew_pkg ripgrep 
    brew_pkg coreutils 
    brew_pkg gpg 
    brew_pkg fd
    brew_pkg datamash
    #brew_pkg emacs-plus@30 --with-nobu417-big-sur-icon --with-native-comp
    brew_cask temurin
    brew_cask iterm2
    brew_cask font-hack-nerd-font
    brew_cask intellij-idea
    #brew_cask android-studio
    brew_cask visual-studio-code
    brew_cask alfred
    brew_cask google-cloud-sdk
    brew_cask authy
    brew_cask tailscale
    brew_cask dash
    brew_cask openlens
    echo "Don't forget to run "
    echo "  gcloud init"
    echo "  gcloud components update"
    echo '  gcloud auth application-default login --scopes="https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/cloud-platform"'
    brew_cask spotify
    brew_pkg awscli
    brew_pkg kubectl
    brew_pkg aws-iam-authenticator
    brew_pkg fzf
    brew_pkg exa
    brew_pkg keychain
    brew_pkg tree
    brew_pkg protoc-gen-go
    brew_pkg jq
    brew_pkg ipmitool
    brew_pkg watch
    brew_pkg gawk
    brew_pkg docker
    brew_pkg colima

    if [ -f ~/.emacs.d/bin/doom ]; then
      echo "Doom emacs already installed"
    else 
      git clone --depth 1 https://github.com/hlissner/doom-emacs ~/.emacs.d
      echo "run ~/.emacs.d/bin/doom install to configure doom emacs"
    fi

    if [ -d $DEVROOT/.asdf ]; then
      echo "asdf-vm already installed"      
    else
      git clone https://github.com/asdf-vm/asdf.git $DEVROOT/.asdf
      pushd $DEVROOT/.asdf
      git checkout "$(git describe --abbrev=0 --tags)"
      popd

      echo "installing asdf plugins"
      export ASDF_DATA_DIR=$DEVROOT/.asdf
      . $DEVROOT/.asdf/asdf.sh
      asdf plugin-add ruby
      asdf plugin-add rust
      asdf plugin-add nodejs
      bash -c "$DEVROOT/.asdf/plugins/nodejs/bin/import-release-team-keyring"
      asdf plugin-add python
      asdf plugin-add golang
      asdf plugin-add python
      asdf plugin-add bazel https://github.com/rajatvig/asdf-bazel.git
      asdf plugin-add direnv
      asdf plugin-add terraform https://github.com/Banno/asdf-hashicorp
      asdf plugin add awscli
      asdf plugin add amazon-ecr-credential-helper https://github.com/matt-e/asdf-amazon-ecr-credential-helper
      asdf plugin-add kubectl https://github.com/asdf-community/asdf-kubectl.git
      asdf plugin-add pre-commit
      asdf plugin add shellcheck https://github.com/luizm/asdf-shellcheck.git
      asdf plugin add shfmt https://github.com/luizm/asdf-shfmt.git
      asdf plugin-add minikube https://github.com/alvarobp/asdf-minikube.git
      asdf plugin-add tflint https://github.com/skyzyx/asdf-tflint
      asdf plugin-add jq https://github.com/azmcode/asdf-jq
    fi

    mkdir -p $GOPATH
    
    
    popd
    rm -Rf $working
}
